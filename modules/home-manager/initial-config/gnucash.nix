{
  config,
  lib,
  pkgs,
  ...
}:
with lib;
let
  cfg = config.initial-config.gnucash;
in
{
  # Cannot import here and in home.nix. Error:
  # The option `initial-files.file' in `home.nix' is already declared in initial-files.nix
  # As it is already imported in home.nix, it is passed down to here as function arg.
  # imports = [ ../initial-files.nix ];

  options.initial-config.gnucash = {
    enable = mkEnableOption "GnuCash";

    show-first-startup = mkOption {
      type = types.bool;
      description = "Whether to show to first startup dialog that welcomes the user and guides through initial setup.";
      default = true;
    };

    show-tip-of-the-day = mkOption {
      type = types.bool;
      description = "Whether to show the tip of the day on how to use GnuCash";
      default = true;
    };

    custom-reports = mkOption {
      type = types.path;
      description = ''
        Path of the custom report scheme file.
        Ensure that this file is in git if using flakes.
        See https://wiki.gnucash.org/wiki/Custom_Reports for instructions or
        copy the custom reports file generated by GnuCash from `~/.local/share/gnucash/saved-reports-X.X`.
      '';
    };

    import-directory = mkOption {
      type = types.str;
      description = "Initial path to open the CSV import dialog at";
      example = "~/Downloads";
      default = "";
    };

    books = mkOption {
      default = { };
      description = "GnuCash book configuration";
      type =
        with types;
        attrsOf (
          submodule (
            {
              name,
              config,
              options,
              ...
            }:
            {
              options = {
                enable = mkOption {
                  type = types.bool;
                  default = true;
                  description = ''
                    Whether this book data should be generated.
                    This option allows specific entries to be disabled.
                  '';
                };

                default = mkOption {
                  type = types.bool;
                  default = true;
                  description = ''
                    Whether this book is the default book that will be initially opened.
                  '';
                };

                metadata = mkOption {
                  type = types.nullOr types.path;
                  description = ''
                    The initial metadata configuration for this book.
                    May specify opened tabs, CSV import templates, window positions and more.
                  '';
                };

                file-path = mkOption {
                  type = types.str;
                  description = "Path to the .gnucash file that contains all the transaction data.";
                };
              };
            }
          )
        );
    };
  };

  config =
    let
      cfg-dir = ".config/gnucash";
      data-dir = ".local/share/gnucash";
      default-book =
        (findFirst (book: book.enable && book.default) { file-path = ""; } (attrValues cfg.books))
        .file-path;
    in
    mkIf cfg.enable {
      assertions =
        let
          defaultBooks = attrNames (filterAttrs (n: v: v.enable && v.default) cfg.books);
        in
        [
          {
            assertion = length defaultBooks <= 1;
            message = "Only 1 enabled default book is allowed. You have enabled ${concatStringsSep ", " defaultBooks}";
          }
        ];

      home = {
        packages = [ pkgs.unstable.gnucash ];
        file = {
          # Automatically loaded at startup.
          # https://wiki.gnucash.org/wiki/Configuration_Locations
          "${cfg-dir}/config-user.scm".text = ''
            (load "${config.home.homeDirectory}/${cfg-dir}/reports.scm")
          '';

          "${cfg-dir}/reports.scm".source = cfg.custom-reports;
        };
      };

      initial-files.file = mapAttrs' (
        name: book: nameValuePair "${data-dir}/books/${name}.gnucash.gcm" { source = book.metadata; }
      ) cfg.books;
      dconf.settings = {
        "org/gnucash/GnuCash/dialogs/import/csv".last-path = cfg.import-directory;
        "org/gnucash/GnuCash/dialogs/new-user".first-startup = cfg.show-first-startup;
        "org/gnucash/GnuCash/dialogs/tip-of-the-day".show-at-startup = cfg.show-tip-of-the-day;
        "org/gnucash/GnuCash/general".prefs-version = 5009;
      } // optionalAttrs (default-book != "") { "org/gnucash/GnuCash/history".file0 = default-book; };
    };
}
